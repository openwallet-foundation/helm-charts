{{ $agentSecretName := printf "%s-agent" (include "mediator.fullname" .) }}
{{- $walletKey := include "getOrGeneratePass" (dict "Namespace" .Release.Namespace "Kind" "Secret" "Name" $agentSecretName "Key" "wallet-key" "Length" 32) }}
{{- $projectId := include "getOrCreateSecret" (dict "Namespace" .Release.Namespace "Kind" "Secret" "Name" $agentSecretName "Key" "firebase-project-id" "DefaultValue" "project-id") }}
{{- $clientEmail := include "getOrCreateSecret" (dict "Namespace" .Release.Namespace "Kind" "Secret" "Name" $agentSecretName "Key" "firebase-client-email" "DefaultValue" "firebase-client@example.com") }}
{{- $pickupJson := include "getOrCreateSecret" (dict "Namespace" .Release.Namespace "Kind" "Secret" "Name" $agentSecretName "Key" "pickup-connection-json" "DefaultValue" "{}") }}
{{- $privateKey := include "getOrCreateSecret" (dict "Namespace" .Release.Namespace "Kind" "Secret" "Name" $agentSecretName "Key" "firebase-private-key" "DefaultValue" "-----BEGIN PRIVATE KEY-----\ndummykey\n-----END PRIVATE KEY-----\n") }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $agentSecretName }}
  labels:
    {{- include "mediator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  wallet-key: {{ $walletKey }}
  firebase-project-id: {{ $projectId }}
  firebase-client-email: {{ $clientEmail }}
  pickup-connection-json: {{ $pickupJson }}
  firebase-private-key: {{ $privateKey }}
