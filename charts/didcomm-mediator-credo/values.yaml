## @section Mediator Settings
##

## @param replicaCount This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
## @param image.repository
## @param image.pullPolicy
## @param image.tag Overrides the image tag which defaults to the chart appVersion.
##
image:
  repository: ghcr.io/openwallet-foundation/didcomm-mediator-credo/mediator
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "314112b"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
## @param imagePullSecrets [array]
imagePullSecrets: []

# This is to override the chart name.
## @param nameOverride String to override the helm chart name, second part of the prefix.
nameOverride: ""
## @param fullnameOverride String to fully override the helm chart name, full prefix. *Must be provided if using a custom release name that does not include the name of the helm chart (`didcomm-mediator-credo`).*
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
## @param serviceAccount.automount Automount service account token for the server service account
## @param serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes annotations to a pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
## @param podAnnotations Map of annotations to add to the mediator pods
podAnnotations: {}

# This is for setting Kubernetes labels to a pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
## @param podLabels Map of labels to add to the mediator pods
podLabels: {}

## @param podSecurityContext Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
podSecurityContext: {}
  # fsGroup: 2000

## @param securityContext Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ## @param service.type Kubernetes Service type
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ## @param service.port
  port: 3000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  ## @param ingress.enabled Enable ingress record generation for controller
  enabled: false
  ## @param ingress.className IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  className: ""
  ## @param ingress.annotations Additional annotations for the Ingress resource.
  ##
  annotations: {}
    # route.openshift.io/termination: edge
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  ## @param ingress.hosts [array] List of hosts to be configured for the specified ingress record.
  hosts: []
    # - host: example.com
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
  ## @param ingress.tls Enable TLS configuration for the host defined at ingress.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# This block is for setting up the network policy more information can be found here: https://kubernetes.io/docs/concepts/services-networking/network-policies/
# Network policies are responsible for allowing ingress traffic to the mediator, and access to the database from the mediator.
networkPolicy:
  ## @param networkPolicy.enabled Enable network policies
  enabled: true
  ## @param networkPolicy.ingress.enabled Enable ingress rules
  ## @param networkPolicy.ingress.namespaceSelector [object] Namespace selector label that is allowed to access the Tenant proxy pods.
  ## @param networkPolicy.ingress.podSelector [object] Pod selector label that is allowed to access the Tenant proxy pods.
  ingress:
    enabled: false
    namespaceSelector: []
    ## Example:
    # network.openshift.io/policy-group: ingress
    podSelector: {}

## @param resources CPU/Memory resource requests/limits - unset by default
## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @param environment [array] Variables to be passed to the container
## ref: https://kubernetes.io/docs/concepts/configuration/overview/
environment:
  - name: LOG_LEVEL
    value: "2"
  - name: AGENT_PORT
    value: "3000"
  - name: AGENT_NAME
    value: Mediator
  - name: AGENT_ENDPOINTS
    value: "http://example.com,wss://example.com"
  - name: WALLET_NAME
    value: mediator-wallet
  - name: POSTGRES_USER
    valueFrom:
      secretKeyRef:
        name: mediator-credo-db
        key: user
  - name: POSTGRES_HOST
    value: mediator-credo-db
  - name: POSTGRES_ADMIN_USER
    value: postgres
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mediator-credo-db
        key: password
  - name: POSTGRES_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mediator-credo-db
        key: admin-password
  - name: PICKUP_TYPE
    value: null       # The default is undefined which means it will not use a pickup repository. Additionally, it can be set to 'postgres'.
  - name: PICKUP_STRATEGY
    value: DirectDelivery       # The default is 'DirectDelivery', it can be also be 'QueueOnly' or 'QueueAndLiveModeDelivery'
  - name: CREATE_NEW_INVITATION
    value: "false"       # used to create a new invitation on startup. The default is 'false'.
  - name: GOAL_CODE
    value: "vc.mediate"      # used to set the goal code for the invitation. The default is 'vc.mediate'
  - name: USE_PUSH_NOTIFICATIONS
    value: "false"       # used to globally enable/disable push notifications. The default is 'false'.
  - name: PUSH_NOTIFICATION_TITLE
    value: "You have a new message"
  - name: PUSH_NOTIFICATION_BODY
    value: "Open your app to read it"
  - name: NODE_OPTIONS
    value: null      # Example: --max-old-space-size=512 to limit memory usage to 512MB
  - name: MALLOC_CONF
    value: null      # Example: "background_thread:true,metadata_thp:auto,dirty_decay_ms:30000,muzzy_decay_ms:30000" to tune jemalloc memory allocator
  - name: LD_PRELOAD
    value: null      # Example: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2 to use jemalloc memory allocator
# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
## @param livenessProbe [object] Liveness probe configuration
livenessProbe:
  httpGet:
    path: /health
    port: http
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
## @param readinessProbe [object] Readiness probe configuration
readinessProbe:
  httpGet:
    path: /health
    port: http
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
## @param startupProbe [object] Startup probe configuration
startupProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30  # 30 * 10 = 300 seconds (5 minutes) max startup time

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
## @param autoscaling.enabled Enable Horizontal POD autoscaling for the Credo Mediator
## @param autoscaling.minReplicas Minimum number of replicas
## @param autoscaling.maxReplicas Maximum number of replicas
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## @param volumes [array] List of volume claims to be created
volumes:
  - name: cache-volume
    emptyDir:
      sizeLimit: 1Gi

## @param volumeMounts [array] List of volumes to be mounted in the container
volumeMounts:
  - name: cache-volume
    mountPath: /.cache

## @param nodeSelector Node labels for pods assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity for pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}

# Settings related to the PostgreSQL database
## @section PostgreSQL parameters
##
postgresql:
  ## @param postgresql.commonLabels [array] Add labels to all the deployed resources (sub-charts are not considered).
  commonLabels: {}
  # Example:
  # app.kubernetes.io/name: postgresql
  # app.kubernetes.io/instance: mediator-credo-db
  primary:
    ## @param postgresql.primary.service.ports.postgresql PostgreSQL service port
    service:
      ports:
        postgresql: 5432
