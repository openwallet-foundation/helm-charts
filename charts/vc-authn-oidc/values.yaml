# Default values for vc-authn-oidc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  ## @param global.ingressSuffix Domain suffix to be used for default hostpaths in ingress
  ingressSuffix: .example.com
  defaultStorageClass: ""
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto
## @section Common Configuration
##
## @param nameOverride String to override the helm chart name, second part of the prefix.
nameOverride: ""
## @param fullnameOverride String to fully override the helm chart name, full prefix. *Must be provided if using a custom release name that does not include the name of the helm chart (`vc-authn-oidc`).*
fullnameOverride: ""

## @param image.registry
## @param image.repository
## @param image.pullPolicy
## @param image.pullSecrets [array]
## @param image.tag Overrides the image tag which defaults to the chart appVersion.
##
image:
  registry: ghcr.io
  repository: openwallet-foundation/acapy-vc-authn-oidc
  pullPolicy: IfNotPresent
  pullSecrets: []
  tag: ""
## @section Controller Configuration
##

## @param acapyTenancyMode Agent tenancy mode, either `single` or `multi`
acapyTenancyMode: single
## @param setNonRevoked if True, the `non_revoked` attributed  will be added to each of the present-proof request `requested_attribute` and `requested_predicate` with 'from=0' and'to=`int(time.time())`
setNonRevoked: true
## @param invitationLabel For the invitations sent that include the proof, what to add as the my_label field. Can be used to identify the requester to the prover
invitationLabel: VC-AuthN
## @param useOobLocalDIDService
useOobLocalDIDService: false
## @param walletDeepLinkPrefix URI scheme and host to use in deep links ((e.g. `{WALLET_DEEP_LINK_PREFIX}?c_i={connection invitation payload`))
walletDeepLinkPrefix: bcwallet://aries_proof-request
## @param controller.cameraRedirectUrl The redirect url can be a web link or the name of a template
## @param controller.presentationExpireTime The number of time in seconds a proof request will be valid for
## @param controller.sessionTimeout.duration The number of seconds an auth_sessions in the states defined in controllerSessionTimeoutConfig is kept for
## @param controller.sessionTimeout.config The json list of auth session states that are safe for deletion
## @param controller.templateDirectory The directory where the controller templates are stored
## @param controller.userVariableSubsitution The placeholder for the user variable substitution file that can be used to add substitution variables
## @param controller.customHtmlConfigMapName ConfigMap file used to define the HTML file overrides
## @param controller.useConnectionBasedVerification Whether to use connection-based proofs. If false connectionless OOB invites contain the proof.
controller:
  cameraRedirectUrl: wallet_howto
  presentationExpireTime: 300
  sessionTimeout:
    duration: 86400
    config:
      - expired
      - failed
      - abandoned
  templateDirectory: /app/controller-config/templates
  userVariableSubsitution: |-
    # This is a default placeholder Python file
    # Add any extensions to user variables here. Example below:

    # def sub_days_plus_one(days: str) -> int:
    # """Strings like '$sub_days_plus_one_4' will be replaced with the
    # final number incremented by one. In this case 5.
    # $sub_days_plus_one_4 -> 5
    # $sub_days_plus_one_10 -> 11"""
    # return int(days) + 1

    # variable_substitution_map.add_variable_substitution(
    #     r"\$sub_days_plus_one_(\d+)", sub_days_plus_one
    # )
  customHtmlConfigMapName: ""
  useConnectionBasedVerification: true

## @param useHTTPS Prepend Agent and Admin URLs with `https`
useHTTPS: true

## @param logLevel Accepts one of the following values: CRITICAL, ERROR, WARNING, INFO, DEBUG
logLevel: INFO

## @param auth.api.existingSecret Specify the name of the secret containing `controllerApiKey` key.
## @param auth.token.privateKey.filename Specify the name of the signing key file
## @param auth.token.privateKey.existingSecret Specify the name of the secret containing the signing key to be mounted, if not specified, a new secret will be created.
auth:
  api:
    existingSecret: ""
  token:
    privateKey:
      filename: jwt-token.pem
      existingSecret: ""

## @param database.existingSecret Specify existing secret containing the keys `mongodb-root-password`, `mongodb-replica-set-key`, and `mongodb-passwords`. `database.secret.create` must be set to `false` when using existing secret.
database:
  existingSecret: ""

## @param podAnnotations Map of annotations to add to the acapy pods
##
podAnnotations: {}

## @param podSecurityContext.enabled Enable Pod securityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## @param podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
## @param podSecurityContext.sysctls Set kernel settings using the sysctl interface
## @param podSecurityContext.supplementalGroups Set filesystem extra groups
## @param podSecurityContext.fsGroup Group to configure permissions for volumes
##
podSecurityContext:
  enabled: false
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled containers' Security Context
## @param containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
## @param containerSecurityContext.runAsUser Set containers' Security Context runAsUser
## @param containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
## @param containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
## @param containerSecurityContext.privileged Set container's Security Context privileged
## @param containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
## @param containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
## @param containerSecurityContext.capabilities.drop List of capabilities to be dropped
## @param containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
##
containerSecurityContext:
  enabled: false
  seLinuxOptions: {}
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"

## Add networkpolicies
##
networkPolicy:
  ## @param networkPolicy.enabled Enable network policies
  ##
  enabled: true
  ## @param networkPolicy.ingress.enabled Enable ingress rules
  ## @param networkPolicy.ingress.namespaceSelector [object] Namespace selector label that is allowed to access the Tenant proxy pods.
  ## @param networkPolicy.ingress.podSelector [object] Pod selector label that is allowed to access the Tenant proxy pods.
  ingress:
    enabled: true
    namespaceSelector: {}
    ## Example:
    # network.openshift.io/policy-group: ingress
    podSelector: {}

## Service configuration
##
service:
  ## @param service.type Kubernetes Service type
  ##
  type: ClusterIP
  ## @param service.port
  ##
  port: 5000

## Configure the ingress resource that allows you to access the controller installation
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for controller
  ##
  enabled: true
  ## @param ingress.className IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  className: ""
  ## @param ingress.annotations Additional annotations for the Ingress resource.
  ##
  annotations: {}
  ## Example:
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # route.openshift.io/termination: edge
  ## @param ingress.tls Enable TLS configuration for the host defined at ingress.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Controller resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The cpu and memory limit for the controller containers
## @param resources.requests.memory The requested memory for the controller containers
## @param resources.requests.cpu The requested cpu for the controller containers
##
resources:
  limits: {}
  requests:
    cpu: 10m
    memory: 128Mi

## @param replicaCount Number of controller replicas to deploy
##
replicaCount: 1

## Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
## @param autoscaling.enabled Enable Horizontal POD autoscaling forthe  controller
## @param autoscaling.minReplicas Minimum number of controller replicas
## @param autoscaling.maxReplicas Maximum number of controller replicas
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
## @param autoscaling.targetMemoryUtilizationPercentage Target Memory utilization percentage
## @param autoscaling.stabilizationWindowSeconds Stabilization window in seconds
##
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: ""
  stabilizationWindowSeconds: 300

## ServiceAccount configuration
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
## @param serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
##
serviceAccount:
  create: false
  annotations: {}
  automountServiceAccountToken: true
  name: ""

## @param affinity Affinity for pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pods assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @section Acapy Configuration
##
acapy:
  ## @param acapy.enabled Deploy AcaPy agent instance
  enabled: true

  ## @param acapy.image.registry
  ## @param acapy.image.repository
  ## @param acapy.image.pullPolicy
  ## @param acapy.image.pullSecrets [array]
  ## @param acapy.image.tag
  ##
  image:
    registry: ghcr.io
    repository: openwallet-foundation/acapy-agent
    pullPolicy: IfNotPresent
    pullSecrets: []
    tag: py3.12-1.3.1

  ## ServiceAccount configuration
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ## @param acapy.serviceAccount.create Specifies whether a ServiceAccount should be created
  ## @param acapy.serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
  ## @param acapy.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ## @param acapy.serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
  ##
  serviceAccount:
    create: false
    annotations: {}
    automountServiceAccountToken: true
    name: ""

  ## @param acapy.replicaCount Number of AcaPy replicas to deploy
  ##
  replicaCount: 1

  ## AcaPy Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param acapy.autoscaling.enabled Enable Horizontal POD autoscaling for AcaPy
  ## @param acapy.autoscaling.minReplicas Minimum number of AcaPy replicas
  ## @param acapy.autoscaling.maxReplicas Maximum number of AcaPy replicas
  ## @param acapy.autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
  ## @param acapy.autoscaling.targetMemoryUtilizationPercentage Target Memory utilization percentage
  ## @param acapy.autoscaling.stabilizationWindowSeconds Stabilization window in seconds
  ##
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ""
    stabilizationWindowSeconds: 300

  ## @section Acapy configuration file
  ##
  ## @descriptionStart
  ## Configuration file is mounted as is into the container. See the AcaPy documentation for details.
  ## Note: Secure values of the configuration are passed via equivalent environment variables from secrets.
  ## @descriptionEnd
  ##
  ## @param acapy.argfile.yml.admin-insecure-mode Run the admin web server in insecure mode. DO NOT USE FOR PRODUCTION DEPLOYMENTS. The admin server will be publicly available to anyone who has access to the interface. An auto-generated admin API Key is supplied via `ACAPY-ADMIN-API-KEY`.
  ## @param acapy.argfile.yml.auto-accept-invites Automatically accept invites without firing a webhook event or waiting for an admin request. Default: false.
  ## @param acapy.argfile.yml.auto-accept-requests Automatically accept connection requests without firing a webhook event or waiting for an admin request. Default: false.
  ## @param acapy.argfile.yml.auto-ping-connection Automatically send a trust ping immediately after a connection response is accepted. Some agents require this before marking a connection as 'active'. Default: false.
  ## @param acapy.argfile.yml.auto-provision If the requested profile does not exist, initialize it with the given parameters.
  ## @param acapy.argfile.yml.auto-respond-credential-offer Automatically respond to Indy credential offers with a credential request. Default: false
  ## @param acapy.argfile.yml.auto-respond-messages Automatically respond to basic messages indicating the message was received. Default: false.
  ## @param acapy.argfile.yml.auto-verify-presentation Automatically verify a presentation when it is received. Default: false.
  ## @param acapy.argfile.yml.genesis-transactions-list Load YAML configuration for connecting to multiple HyperLedger Indy ledgers.
  ## @param acapy.argfile.yml.log-level Specifies a custom logging level as one of: ('debug', 'info', 'warning', 'error', 'critical')
  ## @param acapy.argfile.yml.monitor-ping Send a webhook when a ping is sent or received.
  ## @param acapy.argfile.yml.multitenant-admin Specify whether to enable the multitenant admin api.
  ## @param acapy.argfile.yml.multitenant Enable multitenant mode.
  ## @param acapy.argfile.yml.public-invites Send invitations out using the public DID for the agent, and receive connection requests solicited by invitations which use the public DID. Default: false.
  ## @param acapy.argfile.yml.read-only-ledger Sets ledger to read-only to prevent updates. Default: false.
  ## @param acapy.argfile.yml.wallet-local-did If this parameter is set, provisions the wallet with a local DID from the '--seed' parameter, instead of a public DID to use with a Hyperledger Indy ledger. Default: false.
  ## @param acapy.argfile.yml.wallet-name Specifies the wallet name to be used by the agent. This is useful if your deployment has multiple wallets.
  ## @param acapy.argfile.yml.wallet-storage-type Specifies the type of Indy wallet backend to use. Supported internal storage types are 'basic' (memory), 'default' (sqlite), and 'postgres_storage'.  The default, if not specified, is 'default'.
  ## @param acapy.argfile.yml.wallet-type Specifies the type of Indy wallet provider to use. Supported internal storage types are 'basic' (memory) and 'indy'. The default (if not specified) is 'basic'.
  ##
  argfile.yml:
    admin-insecure-mode: false
    auto-accept-invites: true
    auto-accept-requests: true
    auto-ping-connection: true
    auto-provision: true
    auto-respond-credential-offer: true
    auto-respond-messages: true
    auto-verify-presentation: true
    genesis-transactions-list: /tmp/ledgers.yml
    log-level: info
    monitor-ping: true
    multitenant-admin: false
    multitenant: false
    public-invites: true
    read-only-ledger: true
    wallet-local-did: true
    wallet-name: askar-wallet
    wallet-storage-type: postgres_storage
    wallet-type: askar

  ## @param acapy.ledgers.yml [object]
  ledgers.yml: |-
    - id: BCovrinTest
      is_production: true
      genesis_url: "http://test.bcovrin.vonx.io/genesis"
    - id: SovrinStagingNet
      is_production: true
      genesis_url: "https://raw.githubusercontent.com/sovrin-foundation/sovrin/stable/sovrin/pool_transactions_sandbox_genesis"
    - id: CANdyDev
      is_production: true
      genesis_url: "https://raw.githubusercontent.com/ICCS-ISAC/dtrust-reconu/main/CANdy/dev/pool_transactions_genesis"
    - id: CANdyTest
      is_production: true
      is_write: true
      genesis_url: "https://raw.githubusercontent.com/ICCS-ISAC/dtrust-reconu/main/CANdy/test/pool_transactions_genesis"

  ## @section Acapy common configurations
  ## Acapy resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param acapy.resources.limits The cpu and memory limit for the Acapy containers
  ## @param acapy.resources.requests.memory The requested memory for the Acapy containers
  ## @param acapy.resources.requests.cpu The requested cpu for the Acapy containers
  ##
  resources:
    limits: {}
    requests:
      cpu: 250m
      memory: 384Mi

  ## Acapy service configuration
  ##
  service:
    ## @param acapy.service.ports.http AcaPy service HTTP port
    ## @param acapy.service.ports.admin AcaPy service admin port
    ## @param acapy.service.ports.ws AcaPy service websockets port
    ##
    ports:
      http: 8021
      admin: 8022
      ws: 8023

  ## @param acapy.secrets.api.retainOnUninstall When true, adds helm.sh/resource-policy: keep to generated api secret
  ## @param acapy.secrets.api.existingSecret Name of an existing Secret providing API related keys. If set, the chart will NOT create the api secret.
  ## @param acapy.secrets.api.secretKeys.adminApiKey Key in the API secret holding the admin API key.
  ## @param acapy.secrets.api.secretKeys.jwtKey Key in the API secret holding the multitenant JWT signing secret.
  ## @param acapy.secrets.api.secretKeys.walletKey Key in the API secret holding the wallet key.
  ## @param acapy.secrets.api.secretKeys.webhookapiKey Key in the API secret holding the webhook API key (used when embedding in webhook-url).
  ## @param acapy.secrets.seed.retainOnUninstall When true, adds helm.sh/resource-policy: keep to generated seed secret
  ## @param acapy.secrets.seed.existingSecret Name of an existing Secret providing the wallet seed. If set, the chart will NOT create the seed secret.
  ## @param acapy.secrets.seed.secretKeys.seed Key in the seed secret holding the wallet seed value.
  secrets:
    api:
      retainOnUninstall: true
      existingSecret: ""
      secretKeys:
        adminApiKey: adminApiKey
        jwtKey: jwt
        walletKey: walletKey
        webhookapiKey: webhookapi
    seed:
      retainOnUninstall: true
      existingSecret: ""
      secretKeys:
        seed: seed

  ## @section Acapy NetworkPolicy parameters

  ## Add networkpolicies
  ##
  networkPolicy:
    ## @param acapy.networkPolicy.enabled Enable network policies
    ##
    enabled: true
    ## @param acapy.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    allowExternal: false
    ## @param acapy.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
    ingressNSMatchLabels:
      network.openshift.io/policy-group: ingress

  ## @param acapy.agentUrl Agent host, required if `enabled` is `false`, otherwise ignored
  agentUrl: ""
  ## @param acapy.adminUrl Agent admin host, required if `enabled` is `false`, otherwise ignored
  adminUrl: ""

  ## AcaPy ingress configuration
  ingress:
    agent:
      ## @param acapy.ingress.agent.enabled Set to true to enable acapy ingress
      enabled: false
      ## @param acapy.ingress.agent.publicScheme Scheme used to construct the public URL from the ingress host.
      publicScheme: https
      ## @param acapy.ingress.agent.hostname When the ingress is enabled, a host pointing to this will be created
      hostname: vc-authn-oidc-acapy.local
    admin:
      ## @param acapy.ingress.admin.enabled Set to true to enable acapy admin ingress
      enabled: false
      ## @param acapy.ingress.admin.hostname When the ingress is enabled, a host pointing to this will be created
      hostname: admin.vc-authn-oidc-acapy.local

  postgresql:
    ## @param acapy.postgresql.commonLabels [object] apply common labels to postgresql resources
    commonLabels:
      app.kubernetes.io/role: wallet

##  Overrides for bitnami/mongodb chart - https://github.com/bitnami/charts/tree/main/bitnami/mongodb
mongodb:
  ## @param mongodb.image [object] Pin image tag, and use bitnamilegacy repo.
  image:
    registry: docker.io
    repository: bitnamilegacy/mongodb
    tag: 8.0.4-debian-12-r4
    pullPolicy: IfNotPresent
  auth:
    ## @param mongodb.auth.enabled Enable authentication
    ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
    ##
    enabled: true
    ## @param mongodb.auth.existingSecret Existing secret with MongoDB(&reg;) credentials (keys: `mongodb-passwords`, `mongodb-root-password`, `mongodb-metrics-password`, `mongodb-replica-set-key`)
    ## NOTE: When it's set the previous parameters are ignored.
    ##
    existingSecret: '{{ include "global.fullname" . }}'
    ## MongoDB(&reg;) custom users and databases
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#creating-a-user-and-database-on-first-run
    ## @param mongodb.auth.usernames List of custom users to be created during the initialization
    ## @param mongodb.auth.databases List of custom databases to be created during the initialization
    ##
    usernames: ["vcauthn"]
    databases: ["vcauthn"]
  ## @param mongodb.commonLabels [object] Add labels to all the deployed resources (sub-charts are not considered). Evaluated as a template
  ##
  commonLabels:
    app.kubernetes.io/role: database

  ## @param mongodb.architecture MongoDB(&reg;) architecture (`standalone` or `replicaset`)
  ##
  architecture: replicaset
  ## MongoDB(&reg;) containers' Security Context (main and metrics container).
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param mongodb.containerSecurityContext.enabled Enable MongoDB(&reg;) container(s)' Security Context
  ##
  containerSecurityContext:
    enabled: false
  ## MongoDB(&reg;) pods' Security Context.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param mongodb.podSecurityContext.enabled Enable MongoDB(&reg;) pod(s)' Security Context
  podSecurityContext:
    enabled: false
  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param mongodb.persistence.enabled Enable MongoDB(&reg;) data persistence using PVC
    ##
    enabled: true
    ## @param mongodb.persistence.storageClass PVC Storage Class for MongoDB(&reg;) data volume
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ## set, choosing the default provisioner.
    ##
    storageClass: default
  ## ServiceAccount
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param mongodb.serviceAccount.create Enable creation of ServiceAccount for MongoDB(&reg;) pods
    ##
    create: false
  arbiter:
    ## @param mongodb.arbiter.enabled Enable deploying the arbiter
    ##   https://docs.mongodb.com/manual/tutorial/add-replica-set-arbiter/
    ##
    enabled: false
  hidden:
    ## @param mongodb.hidden.enabled Enable deploying the hidden nodes
    ##   https://docs.mongodb.com/manual/tutorial/configure-a-hidden-replica-set-member/
    ##
    enabled: false
  metrics:
    ## @param mongodb.metrics.enabled Enable using a sidecar Prometheus exporter
    ##
    enabled: false

## @section Redis Configuration
##
## @param redis.enabled Enable Redis deployment
## @param redis.image.registry Redis image registry
## @param redis.image.repository Redis image repository
## @param redis.image.tag Redis image tag
## @param redis.image.pullPolicy Redis image pull policy
##
redis:
  enabled: false
  image:
    registry: docker.io
    repository: redis
    tag: "7.2-alpine"
    pullPolicy: IfNotPresent
  ## @param redis.resources.limits.cpu CPU limit for Redis containers
  ## @param redis.resources.limits.memory Memory limit for Redis containers
  ## @param redis.resources.requests.cpu CPU request for Redis containers
  ## @param redis.resources.requests.memory Memory request for Redis containers
  ##
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  ## @param redis.nodeSelector [object] Node labels for Redis pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param redis.tolerations [array] Tolerations for Redis pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## Redis Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param redis.securityContext.enabled Enable Redis pods' Security Context
  ## @param redis.securityContext.runAsUser Set Redis pods' Security Context runAsUser
  ## @param redis.securityContext.runAsNonRoot Set Redis pods' Security Context runAsNonRoot
  ## @param redis.securityContext.fsGroup Set Redis pods' Security Context fsGroup
  ##
  securityContext:
    enabled: true
    runAsUser: 999
    runAsNonRoot: true
    fsGroup: 999
  ## Redis Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param redis.containerSecurityContext.enabled Enable Redis containers' Security Context
  ## @param redis.containerSecurityContext.runAsUser Set Redis containers' Security Context runAsUser
  ## @param redis.containerSecurityContext.runAsNonRoot Set Redis containers' Security Context runAsNonRoot
  ## @param redis.containerSecurityContext.allowPrivilegeEscalation Set Redis containers' Security Context allowPrivilegeEscalation
  ## @param redis.containerSecurityContext.readOnlyRootFilesystem Set Redis containers' Security Context readOnlyRootFilesystem
  ## @param redis.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Redis containers
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 999
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["ALL"]
