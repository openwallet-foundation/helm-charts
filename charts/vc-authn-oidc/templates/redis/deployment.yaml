{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "global.fullname" . }}-redis
  labels:
    {{- include "vc-authn-oidc.labels" . | nindent 4 }}
    component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "vc-authn-oidc.selectorLabels" . | nindent 6 }}
      component: redis
  template:
    metadata:
      labels:
        {{- include "vc-authn-oidc.selectorLabels" . | nindent 8 }}
        component: redis
    spec:
      {{- if .Values.redis.securityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.redis.securityContext "context" $) | nindent 8 }}
      {{- end }}
      containers:
      - name: redis
        image: {{ .Values.redis.image.registry }}/{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
        {{- if .Values.redis.containerSecurityContext.enabled }}
        securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.redis.containerSecurityContext "context" $) | nindent 10 }}
        {{- end }}
      {{- with .Values.redis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}