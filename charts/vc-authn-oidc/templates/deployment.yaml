apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "global.fullname" . }}
  labels:
    {{- include "vc-authn-oidc.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vc-authn-oidc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/db-api-secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        helm.sh/last-deploy: {{ now | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vc-authn-oidc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vc-authn-oidc.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      volumes:
        - name: jwt-token
          secret:
            secretName: {{ include "vc-authn-oidc.token.secretName" . }}
            defaultMode: 256
        - name: controller-config
          configMap:
            name: {{ include "global.fullname" . }}-controller-config
        {{- if (not (empty .Values.controller.customHtmlConfigMapName)) }}
        - name: controller-templates
          projected:
            sources:
              - configMap:
                  name: {{ .Values.controller.customHtmlConfigMapName | quote }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          image: {{ template "vc-authn-oidc.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: "{{ .Release.Name }}-mongodb-headless.{{ .Release.Namespace }}.svc.cluster.local"
            - name: DB_PORT
              value: {{ .Values.mongodb.service.ports.mongodb | quote }}
            - name: DB_NAME
              value: {{ first .Values.mongodb.auth.databases }}
            - name: OIDC_CONTROLLER_DB_USER
              value: {{ first .Values.mongodb.auth.usernames }}
            - name: OIDC_CONTROLLER_DB_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ include "vc-authn-oidc.databaseSecretName" . }}
                  key: mongodb-passwords
            - name: CONTROLLER_URL
              value: {{ include "vc-authn-oidc.url" . }}
            - name: CONTROLLER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "vc-authn-oidc.apiSecretName" . }}
                  key: controllerApiKey
            - name: CONTROLLER_CAMERA_REDIRECT_URL
              value: {{ .Values.controller.cameraRedirectUrl }}
            - name: CONTROLLER_PRESENTATION_EXPIRE_TIME
              value: {{ .Values.controller.presentationExpireTime | quote }}
            - name: CONTROLLER_SESSION_TIMEOUT_CONFIG_FILE
              value: /app/controller-config/sessiontimeout.json
            - name: CONTROLLER_VARIABLE_SUBSTITUTION_OVERRIDE
              value: /app/controller-config/user_variable_substitution.py
            - name: CONTROLLER_PRESENTATION_CLEANUP_TIME
              value: {{ .Values.controller.sessionTimeout.duration | quote }}
            - name: CONTROLLER_TEMPLATE_DIR
              value: {{ .Values.controller.templateDirectory | quote }}
            - name: USE_CONNECTION_BASED_VERIFICATION
              value: {{ .Values.controller.useConnectionBasedVerification | quote }}
            - name: ACAPY_AGENT_URL
              value: {{ include "vc-authn-oidc.acapy.agent.url" . }}
            - name: ACAPY_ADMIN_URL
              value: {{ include "vc-authn-oidc.acapy.admin.url" . }}
            - name: INVITATION_LABEL
              value: {{ .Values.invitationLabel | quote }}
            - name: WALLET_DEEP_LINK_PREFIX
              value: {{ .Values.walletDeepLinkPrefix }}
            - name: SET_NON_REVOKED
              value: {{ .Values.setNonRevoked | quote }}
            - name: ACAPY_TENANCY
              value: {{ .Values.acapyTenancyMode }}
            {{- if eq .Values.acapyTenancyMode "single" }}
            - name: ST_ACAPY_ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "vc-authn-oidc.acapy.secretName" . }}
                  key: {{ .Values.acapy.secrets.api.secretKeys.adminApiKey | default "adminApiKey" }}
            - name: ST_ACAPY_ADMIN_API_KEY_NAME
              value: "x-api-key"
            {{- else }}
            - name: MT_ACAPY_WALLET_ID
              value: {{ (index .Values "acapy" "argfile.yml" "wallet-name" ) }}
            - name: MT_ACAPY_WALLET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "vc-authn-oidc.acapy.secretName" . }}
                  key: {{ .Values.acapy.secrets.api.secretKeys.walletKey | default "walletKey" }}
            {{- end }}
            - name: SIGNING_KEY_FILEPATH
              value: {{ printf "/opt/token/%s" .Values.auth.token.privateKey.filename }}
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: jwt-token
              mountPath: /opt/token
            - name: controller-config
              mountPath: /app/controller-config/sessiontimeout.json
              subPath: sessiontimeout.json
            - name: controller-config
              mountPath: /app/controller-config/user_variable_substitution.py
              subPath: user_variable_substitution.py
            {{- if (not (empty .Values.controller.customHtmlConfigMapName)) }}
            - name: controller-templates
              mountPath: {{ .Values.controller.templateDirectory }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
